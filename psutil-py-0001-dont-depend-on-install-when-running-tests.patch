From: Sandro Tosi <morph@debian.org>
Date: Sun, 10 Apr 2016 13:13:43 +0100
Subject: dont depend on install when running tests

---
 Makefile | 12 ------------
 1 file changed, 12 deletions(-)

diff --git a/Makefile b/Makefile
index 5104738..136999f 100644
--- a/Makefile
+++ b/Makefile
@@ -109,51 +109,39 @@ setup-dev-env:  ## Install GIT hooks, pip, test deps (also upgrades them).
 # ===================================================================
 
 test:  ## Run all tests.
-	${MAKE} install
 	$(TEST_PREFIX) $(PYTHON) $(TSCRIPT)
 
 test-process:  ## Run process-related API tests.
-	${MAKE} install
 	$(TEST_PREFIX) $(PYTHON) -m unittest -v psutil.tests.test_process
 
 test-system:  ## Run system-related API tests.
-	${MAKE} install
 	$(TEST_PREFIX) $(PYTHON) -m unittest -v psutil.tests.test_system
 
 test-misc:  ## Run miscellaneous tests.
-	${MAKE} install
 	$(TEST_PREFIX) $(PYTHON) psutil/tests/test_misc.py
 
 test-unicode:  ## Test APIs dealing with strings.
-	${MAKE} install
 	$(TEST_PREFIX) $(PYTHON) psutil/tests/test_unicode.py
 
 test-contracts:  ## APIs sanity tests.
-	${MAKE} install
 	$(TEST_PREFIX) $(PYTHON) psutil/tests/test_contracts.py
 
 test-connections:  ## Test net_connections() and Process.connections().
-	${MAKE} install
 	$(TEST_PREFIX) $(PYTHON) psutil/tests/test_connections.py
 
 test-posix:  ## POSIX specific tests.
-	${MAKE} install
 	$(TEST_PREFIX) $(PYTHON) psutil/tests/test_posix.py
 
 test-platform:  ## Run specific platform tests only.
-	${MAKE} install
 	$(TEST_PREFIX) $(PYTHON) psutil/tests/test_`$(PYTHON) -c 'import psutil; print([x.lower() for x in ("LINUX", "BSD", "OSX", "SUNOS", "WINDOWS", "AIX") if getattr(psutil, x)][0])'`.py
 
 test-memleaks:  ## Memory leak tests.
-	${MAKE} install
 	$(TEST_PREFIX) $(PYTHON) psutil/tests/test_memory_leaks.py
 
 test-by-name:  ## e.g. make test-by-name ARGS=psutil.tests.test_system.TestSystemAPIs
-	${MAKE} install
 	@$(TEST_PREFIX) $(PYTHON) -m unittest -v $(ARGS)
 
 test-coverage:  ## Run test coverage.
-	${MAKE} install
 	# Note: coverage options are controlled by .coveragerc file
 	rm -rf .coverage htmlcov
 	$(TEST_PREFIX) $(PYTHON) -m coverage run $(TSCRIPT)
